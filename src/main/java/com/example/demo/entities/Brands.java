package com.example.demo.entities;

// default package
// Generated Nov 23, 2017 7:42:03 PM by Hibernate Tools 5.2.3.Final

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Brands generated by hbm2java
 */
@Entity
@Table(name = "brands", catalog = "businessin")
// to dynamic insert and update
@DynamicInsert
@DynamicUpdate
public class Brands implements java.io.Serializable {

	private Integer id;
	private String name;
	private String logo;
	private String description;
	private String url;
	private Set<Product> products = new HashSet<Product>(0);

	public Brands() {
	}


	public Brands(Integer id) {
		this.id = id;
	}

	public Brands(String name, String logo, String description, String url, Set<Product> products) {
		this.name = name;
		this.logo = logo;
		this.description = description;
		this.url = url;
		this.products = products;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "logo")
	public String getLogo() {
		return this.logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "url")
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "brands" ,  cascade = CascadeType.ALL)
	@JsonIgnore
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

}
